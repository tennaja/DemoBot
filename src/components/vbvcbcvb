import React, { useState, useEffect } from "react";
import Paper from '@mui/material/Paper';
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TablePagination from '@mui/material/TablePagination';
import TableRow from '@mui/material/TableRow';

const columns = [
  { id: 'name', label: 'Name', minWidth: 170 },
  { id: 'code', label: 'ISO\u00a0Code', minWidth: 100 },
  {
    id: 'population',
    label: 'Population',
    minWidth: 170,
    align: 'right',
    format: (value) => value.toLocaleString('en-US'),
  },
  {
    id: 'size',
    label: 'Size\u00a0(km\u00b2)',
    minWidth: 170,
    align: 'right',
    format: (value) => value.toLocaleString('en-US'),
  },
  {
    id: 'density',
    label: 'Density',
    minWidth: 170,
    align: 'right',
    format: (value) => value.toFixed(2),
  },
];

function createData(name, code, population, size) {
  const density = population / size;
  return { name, code, population, size, density };
}

const rows = [
  createData('India', 'IN', 1324171354, 3287263),
  createData('China', 'CN', 1403500365, 9596961),
  createData('Italy', 'IT', 60483973, 301340),
  createData('United States', 'US', 327167434, 9833520),
  createData('Canada', 'CA', 37602103, 9984670),
  createData('Australia', 'AU', 25475400, 7692024),
  createData('Germany', 'DE', 83019200, 357578),
  createData('Ireland', 'IE', 4857000, 70273),
  createData('Mexico', 'MX', 126577691, 1972550),
  createData('Japan', 'JP', 126317000, 377973),
  createData('France', 'FR', 67022000, 640679),
  createData('United Kingdom', 'GB', 67545757, 242495),
  createData('Russia', 'RU', 146793744, 17098246),
  createData('Nigeria', 'NG', 200962417, 923768),
  createData('Brazil', 'BR', 210147125, 8515767),
];

export default function StickyHeadTable() {
  const [items, setItems] = useState([]);
  useEffect(() => {
    fetch(
      "https://apigw1.bot.or.th/bot/public/Stat-ExchangeRate/v2/DAILY_AVG_EXG_RATE/?start_period=2022-11-10&end_period=2022-11-11",
      {
        method: "GET",
        headers: { "X-IBM-Client-Id": "6000df3c-02b9-4571-ae66-5d936a34f50e" },
      }
    )
      .then((res) => res.json())
      .then((result) => {
        var dataexchange = [];
        for (let index in result[`result`].data.data_detail) {
          dataexchange.push({
            currency_id:
              result[`result`].data.data_detail[index]["currency_id"],
            currency_name_th:
              result[`result`].data.data_detail[index]["currency_name_th"],
            buying_transfer:
              result[`result`].data.data_detail[index]["buying_transfer"],
            selling: result[`result`].data.data_detail[index]["selling"],
          });
        }
        setItems(dataexchange);
      });
  }, []);
  const [page, setPage] = React.useState(0);
  const [rowsPerPage, setRowsPerPage] = React.useState(10);

  const handleChangePage = (event, newPage) => {
    setPage(newPage);
  };

  const handleChangeRowsPerPage = (event) => {
    setRowsPerPage(+event.target.value);
    setPage(0);
  };

  return (
    <Paper sx={{ width: '100%', overflow: 'hidden' }}>
      <TableContainer sx={{ maxHeight: 440 }}>
        <Table stickyHeader aria-label="sticky table">
        <TableHead style={{color : "green"}}>
            <TableRow>
              <TableCell align="center"><h5>ประเทศ</h5></TableCell>
              <TableCell align="center"><h5>สกุลเงิน</h5></TableCell>
              <TableCell align="center"><h5>ซื้อเข้า</h5></TableCell>
              <TableCell align="center"><h5>ขายออก</h5></TableCell>
            </TableRow>
          </TableHead>
          <TableBody>
            {items.map((row) => (
              <TableRow
                key={row.name}
                sx={{ "&:last-child td, &:last-child th": { border: 0 } }}
              >
                <TableCell align="center"><h5 style={{color : "red"}}>{row.currency_name_th}</h5></TableCell>
                <TableCell align="center"><h5>{row.currency_id}</h5></TableCell>
                <TableCell align="center"><h5 style={{color : "green"}}>{row.buying_transfer}</h5></TableCell>
                <TableCell align="center"><h5 style={{color : "red"}}>{row.selling}</h5></TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </TableContainer>
      <TablePagination
        rowsPerPageOptions={[10, 25, 100]}
        component="div"
        count={rows.length}
        rowsPerPage={rowsPerPage}
        page={page}
        onPageChange={handleChangePage}
        onRowsPerPageChange={handleChangeRowsPerPage}
      />
    </Paper>
  );
}